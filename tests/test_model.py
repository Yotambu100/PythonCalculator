import pytest

from metadata import MetaData
from model import Model
from string_to_list_converter import StringToListConverter
from operators import *

OPERATORS_DICTIONARY = {
    '+': Plus(),
    '-': Minus(),
    '*': Multiplication(),
    '/': Division(),
    '^': Power(),
    '~': Negation(),
    '%': Modulo(),
    '!': Factorial(),
    '@': Average(),
    '$': Maximum(),
    '&': Minimum()
}




TEST_DATA = [
    # simple calculation
    ("3+2", 5),
    ("4.1*7", 4.1 * 7),
    ("1-20", -19),
    ("2*-1", -2),
    ("0*2", 0),
    ("7/2", 3.5),
    ("10/20", 0.5),
    ("10%3", 1),
    ("3$7", 7),
    ("3$-7", 3),
    ("14&22", 14),
    ("14&-22", -22),
    ("5@-5", 0),
    ("10@15", 12.5),
    ("3^3", 27),
    ("2^-3", 0.125),
    ("5!", 120),
    ("0!", 1),
    ("~6", -6),
    ("~~6", 6),
    ("~-~6", -6),

    # complicated calculation
    ("---6&22%(2+6-5)^2-2&21$221@0", -110.5),
    ("9*~(6+6)+2^2", -104.0),
    ("----(8*--8)$5+2%456+9*9*~(6+6)+2^(-(1+1))", -905.75),
    ("----~4+67*2-4522/221+(2&23*22%3^2)-7*2@4", 90.53846153846155),
    ("((2+4-6^~2-4+2)/(2+3^2/5&2@56)+76-~(4!))", 101.71932006633499),
    ("18-6^2+5%4$3+2+4+5+6-------9+7&5/3.2%4.2", -7.4375),
    ("0!+-1*2/3^4%5&6$7@~8", -1.0),
    ("(1+2)^((-1+~2)*-1)!+(3-1)!", 731.0),
    ("((6+6)+(6+6))", 24.0),
    ("~((88/23*2.2)^3&(5!+---6^3))", -1.5239066784713154e-89),
    ("14$5%2&4+4+4-7.7+(5*3$2)!", 1307674368000.3),
    ("7&8*22^3!-7^3+((22%2*7)+3$5^3&~7)", 793658985.0000128),
    ("005*2^2&2-7&88+224@26-(43-44+66&2----45*(321&2))", 47.0),
    ("(--(--(--(--(4+4)))))", 8),
    ("~(123@((145*2/4%6-6/7)@(3^5-9000)))", 2109.839285714286),
    ("8-7^2+4%6!+(5$9+(6^7-10&9%2))", 279907.0),
    ("123/86+996-22*77$(6^2%4-(88---7+5^3*2$3^7))", -696.5697674418604),
    ("4$55^27*22&44*(23$2^2&43*6&(65^2+2--6))", 6.82059432867212e+51),
    ("5!-52&5*2-((2*2)+45^0.5+~2)", 101.29179606750063),
    ("77^2*6%4$3@678*(2^7&22^2-(7^2)---3+66&6)", 581208012.0),
    ("55%66$78^2+5----65^2*((3$5^7@555)+6^2&12^2)-2", 1.0874215407751212e+200),
    ("3&~2*4", -8),
    ("7&8*22^3!-7^3+((22%2*7)+3$5^3&~7)", 793658985.0000128),
    ("~~~----~-~---~--~~~~~----~-~-~2323", 2323),
    ("24%12^2-7*9&(2+3-4+6$22--8--~((9+8)!))", 2489811996671783.0),
    ("5!-52&5*2-((2*2)+45^5+~2+2)", -184528019.0),
    ("87^3%2&66@45%((22%4$2^2)+7*6!)^~2*6", 1.3836802264343499e-11),
    ("24%12^2-7*9&(2+3-4+6$22--8--~((9+8)!))", 2489811996671783.0),
    ("87^3%2&66@45%((22%4$2^2)+7*6!)^~2*6", 1.3836802264343499e-11),
    ("4--~~~3+22!+4--~~(33+6^2-~(5+7)+2)", 1.1240007277776077e+21),
]


@pytest.mark.parametrize("equation,expected", TEST_DATA)
def test_solve_equation(equation, expected):
    # Set up the solver

    # create the metadata
    metadata = MetaData(OPERATORS_DICTIONARY)

    # convert the string to list
    convertor_string_to_list = StringToListConverter()
    metadata.equation_list = \
        convertor_string_to_list.convert_string_to_list(equation)

    # create solver
    model = Model()
    assert model.solve_equation(metadata).result == expected, \
        "failed to check item: " + equation
